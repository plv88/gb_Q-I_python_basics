# 1. Создать список и заполнить его элементами различных типов данных. Реализовать скрипт проверки типа данных каждого
# элемента. Использовать функцию type() для проверки типа. Элементы списка можно не запрашивать у пользователя, а
# указать явно, в программе.

my_list_1 = [22, 23.1, 5+6j, 'str', [1,2,3], None, (1,2,3), {2, 'ew'}, {1:21, '1':23}, True]
for el in my_list_1:
    print(f'{el} - {type(el)}')

# 2. Для списка реализовать обмен значений соседних элементов. Значениями обмениваются элементы с индексами 0 и 1, 2 и 3
# и т. д. При нечётном количестве элементов последний сохранить на своём месте. Для заполнения списка элементов
# нужно использовать функцию input().

my_list_2 = []
while True:
    # Все будет в str)
    my_var = input('Введите элемент списка. Чтобы прервать напиши "+++"')
    if my_var == "+++":
        break
    my_list_2.append(my_var)
print(f'Старый список - {my_list_2}')
for i in range(1, len(my_list_2), 2):
    temp_var = my_list_2[i]
    my_list_2[i] = my_list_2[i-1]
    my_list_2[i - 1] = temp_var
print(f'Измененный список - {my_list_2}')

# 3. Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить, к какому времени года относится месяц (зима,
#  весна, лето, осень). Напишите решения через list и dict.

dict_seasons = {1: 'зима', 2: 'зима', 3: 'весна', 4: 'весна', 5: 'весна', 6: 'лето', 7: 'лето', 8: 'лето',
                9:'осень', 10:'осень', 11:'осень', 12: 'зима'}
why_list = ['январь', 'февраль', 'март', 'апрель', 'май', 'июнь',
            'июль', 'август', 'сентябрь','октябрь', 'ноябрь', 'декабрь']
while True:
    answer = input('Введите номер интересующего месяца, прервать - "+"')
    if answer == '+':
        break
    if not answer.isdigit():
        print('Введите корректно цифру')
        continue
    answer = int(answer)
    if answer < 1 or answer > 12:
        print('Число может быть от 1 до 12')
        continue
    print(f'Введена цифра - {answer}, название этого месяца - {why_list[answer-1]} и это {dict_seasons[answer]}')
    print('+-'*30)

# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки. Строки
# нужно пронумеровать. Если слово длинное, выводить только первые 10 букв в слове

my_str = input('Введите строку из нескольких слов')
for i, el in enumerate(my_str.split()):
    if len(el) > 10:
        el = el[:10]
    print(f'{i} - {el}')

# 5. Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который не возрастает. У пользователя
# нужно запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы с одинаковыми значениями, то новый
# элемент с тем же значением должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввёл число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввёл число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввёл число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать сразу в коде, например, my_list = [7, 5, 3, 3, 2].

my_list = [7, 5, 3, 3, 2]
my_list_2 = [7, 5, 3, 3, 2]
while True:
    # Будем добавлять элементы в список, не копировать список и по одному добалять, а все в один, я так понял задание
    a = input('Введите натуральное число, прервать - "++" ')
    if a == "++":
        break
    if not a.isdigit():
        print('Введите число корректно')
        continue
    a = int(a)
    my_list.append(a)
    my_list.sort(reverse=True)
    print(f'Пользователь ввёл число {a}. Результат: {my_list}')
    # Сделаем без сорт
    flag_insert = True
    for i, el in enumerate(my_list_2):
        if a >= el:
            my_list_2.insert(i, a)
            flag_insert = False
            break
    if flag_insert:
        my_list_2.append(a)
    print(f'Пользователь ввёл число {a}. Результат: {my_list_2}')

# # 6. *Реализовать структуру данных «Товары». Она должна представлять собой список кортежей. Каждый кортеж хранит
# # информацию об отдельном товаре. В кортеже должно быть два элемента — номер товара и словарь с параметрами, то есть
# # характеристиками товара:
# # название, цена, количество, единица измерения. Структуру нужно сформировать программно,
# # запросив все данные у пользователя.
# # Пример готовой структуры:
# # [
# # (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
# # (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
# # (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# # ]
# # Нужно собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ —
# # характеристика товара, например, название. Тогда значение — список
# # значений-характеристик, например, список названий товаров.
# # Пример:
# # {
# # “название”: [“компьютер”, “принтер”, “сканер”],
# # “цена”: [20000, 6000, 2000],
# # “количество”: [5, 2, 7],
# # “ед”: [“шт.”]
# # }

list_product = []
while True:
    act = input('Добавим новый товар? да(+)/нет(-)')
    if act == '-':
        break
    temp_dict = {}
    try:
        temp_dict['название'] = input('Введите название')
        temp_dict['цена'] = int(input('Введите цену'))
        temp_dict['количество'] = int(input('Введите кол-во'))
        temp_dict['ед'] = input('Введите единицу измерения')
    except:
        print('Что то вводишь не корректно')
    temp_tuple = ()
    numb_el = len(list_product)+1
    temp_list = []
    temp_list.append(numb_el)
    temp_list.append(temp_dict)
    temp_tuple = tuple(temp_list)
    list_product.append(temp_tuple)
print(list_product)

temp_list_name = []
temp_list_price = []
temp_list_sum = []
temp_list_unit = []
for el in list_product:
    temp_list_name.append(el[1]['название'])
    temp_list_price.append(el[1]['цена'])
    temp_list_sum.append(el[1]['количество'])
    temp_list_unit.append(el[1]['ед'])
dict_product = {}
dict_product['название'] = temp_list_name
dict_product['цена'] = temp_list_price
dict_product['количество'] = temp_list_sum
dict_product['ед'] = temp_list_unit
print(dict_product)

